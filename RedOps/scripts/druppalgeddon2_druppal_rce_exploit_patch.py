from pathlib import Path

try:
    project_root = Path(__file__).resolve().parent
except NameError:
    project_root = Path.cwd()

exploiter_path = project_root / "RedOps" / "Core" / "exploiter.py"

# Read current content
exploiter_code = exploiter_path.read_text()

# Only add PoC if not already present
if "drupalgeddon2" not in exploiter_code:
    insert_code = """
        elif cve == "CVE-2018-7600":
            print("[*] Triggering Drupalgeddon2 PoC...")
            from core.exploits import drupalgeddon2
            if drupalgeddon2.check_drupalgeddon2(target):
                drupalgeddon2.simulate_rce(target)
    """

# Find insertion point
    if 'for cve in cves:' in exploiter_code:
        lines = exploiter_code.splitlines()
        for i, line in enumerate(lines):
            if 'for cve in cves:' in line:
                insert_index = i + 1
                while insert_index < len(lines) and (
                    lines[insert_index].strip().startswith("print") or
                    lines[insert_index].strip() == ""
                ):
                    insert_index += 1
                lines.insert(insert_index, insert_code.strip())
                break
        updated_code = "\n".join(lines)
        exploiter_path.write_text(updated_code)
        print(f"[âœ”] Drupalgeddon2 PoC inserted into: {exploiter_path.resolve()}")
    else:
        print("[!] Loop 'for cve in cves:' not found. No insertion made.")
else:
    print("[*] Drupalgeddon2 PoC already present.")

